{
  
    
        "post0": {
            "title": "Dear Ashang",
            "content": "Dear Ashang . I, your tsawo Kaldan wanted to tell you few things. Yesterday was the day that you left us three years ago. As usual, everyone in our family started contributing to recite thardo hundred times. Cho Wangdak explain the gist of Thardo to everyone and told us about those wonderful coincidence occurred during the first time our three families initiated after you passed away. If you are wondering about eve, she is doing much better. Everyone is trying their best to help her. . It was indeed tough for all us for losing you. Especially for me, it was unbelievable and hard to convince myself of your absence. It felt like a nightmare. I am pretty sure that all the Amas and eve might have felt worse for losing a son and a brother. But don’t worry as they are accepting the reality gradually. About me, I have been listening to Sangye Nyanpa Rinpoche’s teaching about Chunjug lately and helps me to accept the reality and introspect within. I totally forgot to tell you about my new job. I got a job as software developer at Esukhia. The founder is Gen Ngawang Thrinley or Tensang. He knows you as he has been in Sherabling for a while learning Tibetan Astrology and later teaching the subject. I am very happy for the job as it serves the purpose of all the hard work put by my ancestors and myself till date. We are working on exciting project which has potential to revolutionize the way in which one can learn Buddhism. I am excited to contribute more in future. It seems like my wishes are coming true. I wish you could have see me getting job. . About today, Me and some of my friends went to a slum near Gagal airport to give a lunch. The situation over there was very poor. I saw lots of suffering and felt many thing at once. When we reached there, we immediately started working as we want to serve the lunch on time. After chopping onions, I went to river bank to rest. Over there I met a guy called Jonnywalker. Even though due to financial problem he had many profession but his is actually an artist performing folk songs. He told us his story about performing at Jammu’s All India Radio station. I requested him to sing while we serve food but he insisted to perform then itself. He started singing Dama Dam Mus ti ka Landar(It is famous folk song from Rajastan), It was too good that it took all the suffering in that area for a while. I was amazed by the power of music. After that we were back to reality. Me and one of my friend went to look around the place. I forced myself to explore the place as it is not very hard to debate about emptiness and impermanence and all, but I wanted to see their suffering. I felt gratitude to His Holiness and my ancestors for dedicating their life for us as they have suffered similar. I told them to not give up. I wish I could have told them more and motivate them but I was speechless when I was there. After serving the food, I saw the full of smiles. I felt helpless as I was wondering when will they get such lunch again. I remembered a discussion about ultimate solution of samsara being free of ignorance with Cho Wangdak. I was wondering when will they get chance to think about such things. I hope they will get the chance and take a different route in their life. I wish the same for all of us as all of us have fair share of suffering due to our ignorance. I guess I will stop here today. I will write you soon. We miss you dearly Ashang la. . With love, . Yours Tsawo Tolo . Kaldan .",
            "url": "https://kaldan007.github.io/blog/reflection/2020/08/05/Dear-Ashang.html",
            "relUrl": "/reflection/2020/08/05/Dear-Ashang.html",
            "date": " • Aug 5, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Pointers from Clean Code",
            "content": "Chapter One: Clean Code . elegent and efficient | straight forward logic which disable bugs to hide | minimal dependencies | error handling as articulated strategy | performace close to optimal | reads like well written prose | full of crips abstractions | can be enhenced by other developer easily | meaningful naming considered | build with care | no duplication | . Cleaing up code . changing variable name for better understanding | breaking up a function that is a little too large | eliminating duplication | clean up composite if statement | . Chapter Two: Meainingful Names . Use intention revealing names good names(intent-revealing) save time | if name requires a comment, then it is not intent revealing name. You better come up with better name. | intented names makes code more explicit | . | .",
            "url": "https://kaldan007.github.io/blog/coding/2020/07/30/Notes-ofclean-code.html",
            "relUrl": "/coding/2020/07/30/Notes-ofclean-code.html",
            "date": " • Jul 30, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "How to use Transkribus to transcribe Tibetan pecha(pering) effectively?",
            "content": "What is Transkribus? . Transkribus is a software deticated for transcripting text from handwritten or printed old manuscript’s images. It enable users to train dedicated model for recognising text in manuscripts. Shout out to H2020 Project READ(Recognition and Enrichment of Archival Documents) for funding the transkribus project. To know more about transkribus project itself and explore more about the use case, you can refer transkribus webpage here. I will be assuming that you have pretty good idea about how does transkribus work. . Our Use case . In our case, we have plenty of rare and old manuscripts waiting for digitisation. Most of our manuscript are in pering layout format. Pering is the most common pecha(manusript) layout format found in early days. An example of pering layout page is shown below.(image_link) We faced many challanges while trying to transcripting those pechas using transkribus in normal way. We figured out that we can do some interference to get better results. Hence this article is about what kind of interference that we have done in order to get better model and better transcription. . Block diagram . Here is the block diagram of the whole procedure that we follow. [block diagram image] . Training data collection . Since most of our pechas are in distinct handwriting, we always try to train dedicated model for each pecha to get better transcription. We always train our models with training and validation data of ratio 8:2. While collecting training and validation data for the model, we tends to divide the process into two main parts. Those are layout analysis and getting respective trasncription. . Layout annalysis . Transcript . Model Training . Transcripting using Model . Post Processing the Model output .",
            "url": "https://kaldan007.github.io/blog/markdown/self%20reflection/2020/07/22/Transkribus.html",
            "relUrl": "/markdown/self%20reflection/2020/07/22/Transkribus.html",
            "date": " • Jul 22, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "I",
            "content": "“I” . First and foremost, I would like to pay homage to three jewels and my gurus from whom I have received teaching. Whatever I am writing here is nothing that I have came up by myself. It is from my own understanding of teachings that I have received and books I have read written by Buddhist scholars. I would like to make another thing very clear that I am an amateur reader or not a avid reader hence I would highly recommend you to examine and cross check whatever I am claiming or citing with respective legitimate source. I am always open to any discourse. . The last book that I have read is called “What makes you not a Buddhist” by Dzongsar Jamyang Khentse Rinpoche. For me it was very convincing and brief book to really understand about Buddhist philosophy. In that book, Rinpoche have used method of contradiction or elimination to prove him or her a Buddhist. He claims that if anyone who accept the four seals are Buddhist. The four seals are mentioned by Buddha himself and those are: . “All compounded things are impermanent. All emotions are pain. All things have no inherent existence. Nirvana is beyond concepts.” . Anyway, I am here to question the existence of self or “I”. Most of us, care so much about ourselves. I am not saying whatever you are doing out there claiming self care is hundred percent wrong. But have you ever asked yourself about the existence of yourself. I mean something deep, not simply looking in the mirror and convinced by an image formed on your retina as yourself. The reality is that you are compounded thing made up of millions of cells and millions of ideas. You don’t exist by your own or you have no inherent existence. . Since you are compounded thing, you are impermanent hence you are not reliable. Now the question is, are you going to waste your time and energy on an unreliable thing. Do you really thing your unreliable self will be satisfied after binge watching a whole season of your favorite show in Netflix or eating a tub of choco chips ice cream or drinking an expensive bottle of whisky. You know the answer. Its not going to. But it doesn’t implies, you should hate yourself or let yourself harm. The reason is that, to do that also you need to prove yourself’s existence on its own or else you are don’t really have an objective to harm or hate. After reading this book, I try my best to question my action or reaction to anything with respective to those four seals. Most of the time, it sounds very logical and I started getting lot of time and was able to save lots of energy. But to be honest, sometimes it is something which made me feels like, this is too crazy to be real. But if you are aware of your impermanence and unreliability, I am pretty sure, you will gain another kind of sight. I think its worth taking that short rather than running in that rat race. I hope may all sentient being will be able to gain that deep down conviction of four seals anytime soon. .",
            "url": "https://kaldan007.github.io/blog/reflection/2020/07/21/I.html",
            "relUrl": "/reflection/2020/07/21/I.html",
            "date": " • Jul 21, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://kaldan007.github.io/blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://kaldan007.github.io/blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://kaldan007.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://kaldan007.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}